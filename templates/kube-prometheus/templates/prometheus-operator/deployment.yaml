---
# Source: kube-prometheus/templates/prometheus-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-prometheus-operator
  namespace: "default"
  labels:
    app.kubernetes.io/instance: kube-prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-prometheus
    app.kubernetes.io/version: 0.74.0
    helm.sh/chart: kube-prometheus-9.2.1
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kube-prometheus
      app.kubernetes.io/name: kube-prometheus
      app.kubernetes.io/component: operator
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kube-prometheus
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-prometheus
        app.kubernetes.io/version: 0.74.0
        helm.sh/chart: kube-prometheus-9.2.1
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: kube-prometheus-operator
      
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: kube-prometheus
                    app.kubernetes.io/name: kube-prometheus
                    app.kubernetes.io/component: operator
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: prometheus-operator
          image: docker.io/bitnami/prometheus-operator:0.74.0-debian-12-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          args:
            - --kubelet-service=kube-system/kube-prometheus-kubelet
            - --log-format=logfmt
            - --log-level=info
            - --localhost=127.0.0.1
            - --prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)
          env:
            - name: PROMETHEUS_CONFIG_RELOADER
              valueFrom:
                configMapKeyRef:
                  name: kube-prometheus-operator
                  key: prometheus-config-reloader
          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
