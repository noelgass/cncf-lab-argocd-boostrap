---
# Source: kube-prometheus/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: kube-prometheus-prometheus
  namespace: "default"
  labels:
    app.kubernetes.io/instance: kube-prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kube-prometheus
    app.kubernetes.io/version: 0.74.0
    helm.sh/chart: kube-prometheus-9.2.1
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  shards: 1
  serviceAccountName: kube-prometheus-prometheus
  serviceMonitorSelector: {}
  podMonitorSelector: {}
  probeSelector: {}
  scrapeConfigSelector: {}
  alerting:
    alertmanagers:
      - namespace: "default"
        name: kube-prometheus-alertmanager
        port: http
        pathPrefix: "/"
  image: docker.io/bitnami/prometheus:2.52.0-debian-12-r2
  externalUrl: http://kube-prometheus-prometheus.default:9090/
  paused: false
  logLevel: info
  logFormat: logfmt
  listenLocal: false
  enableAdminAPI: false
  resources:
    limits:
      cpu: 750m
      ephemeral-storage: 1024Mi
      memory: 768Mi
    requests:
      cpu: 500m
      ephemeral-storage: 50Mi
      memory: 512Mi
  retention: 10d
  portName: "web"
  routePrefix: "/"
  serviceMonitorNamespaceSelector: {}
  podMonitorNamespaceSelector: {}
  probeNamespaceSelector: {}
  scrapeConfigNamespaceSelector: {}
  enableRemoteWriteReceiver: false
  securityContext:
    fsGroup: 1001
    fsGroupChangePolicy: Always
    supplementalGroups: []
    sysctls: []
  ruleNamespaceSelector: {}
  ruleSelector: {}
  podMetadata:
    labels:
      
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/component: prometheus
      prometheus: kube-prometheus-prometheus
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: kube-prometheus
                app.kubernetes.io/name: kube-prometheus
                app.kubernetes.io/component: prometheus
            topologyKey: kubernetes.io/hostname
          weight: 1
  volumes:
    - name: empty-dir
      emptyDir: {}
  volumeMounts:
    - name: empty-dir
      mountPath: /tmp
      subPath: tmp-dir  
  containers:
    ## This monkey patching is needed until the securityContexts are
    ## directly patchable via the CRD.
    ## ref: https://github.com/prometheus-operator/prometheus-operator/issues/3947
    ## currently implemented with strategic merge
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/strategic-merge-patch.md
    - name: prometheus
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      livenessProbe:
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 10
        successThreshold: 1
      readinessProbe:
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 10
        successThreshold: 1
      startupProbe:
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        initialDelaySeconds: 0
        periodSeconds: 15
        timeoutSeconds: 3
        failureThreshold: 60
        successThreshold: 1
    ## This monkey patching is needed until the securityContexts are
    ## directly patchable via the CRD.
    ## ref: https://github.com/prometheus-operator/prometheus-operator/issues/3947
    ## currently implemented with strategic merge
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/strategic-merge-patch.md
    - name: config-reloader
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      livenessProbe:
        tcpSocket:
          port: reloader-web
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      readinessProbe:
        tcpSocket:
          port: reloader-web
        initialDelaySeconds: 15
        periodSeconds: 20
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
